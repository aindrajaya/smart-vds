// File containing functions that detect vulnerabilities; each function corresponds to one type of vulnerability
const { JSONPath } = require('jsonpath-plus')

module.exports = {
  /* Unchecked Call Return Value function
  *   Purpose: Detect unchecked call return value pattern in a given smart contract
  *   Function checks for:
  *       - Low-level calls: call, send, delegatecall, and callcode
  *       - If they exist, are they not within one of the following:
  *           - IfStatement, ReturnStatement, valid expression, FunctionCall, or VariableDeclaration
  * */
  detectUncheckedCallReturnValue: (parseTree) => {
    // Vulnerability patterns for Unchecked Call Return Value
    const p1 = '$..statements[?(@.type != "IfStatement" && @.type != "ReturnStatement" && ' +
        '@.type != "VariableDeclarationStatement")]'
    const p2 = '$..expression[?(@.type != "FunctionCall" && (@.memberName == "call" || @.memberName == "send" || ' +
        '@.memberName == "delegatecall" || @.memberName == "callcode"))]'

    // JSON Queries for pattern matching
    const q1 = JSONPath({ json: parseTree, path: p1, resultType: 'value' })
    const q2 = JSONPath({ json: q1, path: p2, resultType: 'value' })

    // Return if vulnerability is detected or not
    return q2.length > 0
  }
}
